{
  "name": "api-gateway",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "build:api-gateway": "nest build api-gateway",
    "build:auth-service": "nest build auth-service",
    "build:file-service": "nest build file-service",
    "build:email-service": "nest build email-service",
    "build:all": "npm run build:api-gateway && npm run build:auth-service && npm run build:file-service && npm run build:email-service",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/api-gateway/main",
    "start:dev:api-gateway": "cross-env NODE_ENV=development nest start api-gateway --watch",
    "start:dev:auth-service": "cross-env NODE_ENV=development nest start auth-service --watch",
    "start:dev:file-service": "cross-env NODE_ENV=development nest start file-service --watch",
    "start:dev:email-service": "cross-env NODE_ENV=development nest start email-service --watch",
    "start:dev:all": "concurrently \"npm run start:dev:api-gateway\" \"npm run start:dev:auth-service\" \"npm run start:dev:file-service\" \"npm run start:dev:email-service\"",
    "start:infra": "./start-infra.sh",
    "stop:infra": "./stop-infra.sh",
    "init:db": "./init-db.sh",
    "dev": "./start-services.sh",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:restart": "npm run docker:down && npm run docker:up",
    "docker:rebuild": "npm run docker:down && npm run docker:build && npm run docker:up",
    "deploy": "npm run build:all && npm run docker:rebuild",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/api-gateway/test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.1",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/microservices": "^11.0.11",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/swagger": "^11.0.6",
    "@nestjs/typeorm": "^11.0.0",
    "amqp-connection-manager": "^4.1.14",
    "amqplib": "^0.10.5",
    "aws-sdk": "^2.1692.0",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "handlebars": "^4.7.8",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.10.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.14.1",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "swagger-ui-express": "^5.0.1",
    "typeorm": "^0.3.21"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/amqplib": "^0.10.7",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/multer": "^1.4.12",
    "@types/node": "^22.10.7",
    "@types/nodemailer": "^6.4.17",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.2",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/common(|/.*)$": "<rootDir>/libs/common/src/$1"
    }
  }
}
